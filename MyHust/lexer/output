INT : int
ID : main
LP : (
RP : )
LC : {
FLOAT : float
ID : f1
SEMICOLON : ;
ID : f1
ASSIGN : =
FLOAT_LIT : 0x.EP1F
INT_LIT : 0
INT_LIT : 01
FLOAT_LIT : 0.F
SEMICOLON : ;
ID : f1
ASSIGN : =
FLOAT_LIT : .13E-2F
SEMICOLON : ;
ID : f1
ASSIGN : =
FLOAT_LIT : 12.F
SEMICOLON : ;
ID : f1
ASSIGN : =
FLOAT_LIT : 0x.EP1F
SEMICOLON : ;
ID : f1
ASSIGN : =
FLOAT_LIT : 0xAB.CDP-2F
SEMICOLON : ;
INT : int
ID : a
LB : [
INT_LIT : 5
RB : ]
ID : q
LB : [
INT_LIT : 5
RB : ]
ASSIGN : =
LC : {
INT_LIT : 1
COMMA : ,
INT_LIT : 1
COMMA : ,
INT_LIT : 1
COMMA : ,
INT_LIT : 1
COMMA : ,
INT_LIT : 1
COMMA : ,
INT_LIT : 2
COMMA : ,
INT_LIT : 2
COMMA : ,
INT_LIT : 2
COMMA : ,
INT_LIT : 2
COMMA : ,
INT_LIT : 2
COMMA : ,
INT_LIT : 3
COMMA : ,
INT_LIT : 3
COMMA : ,
INT_LIT : 3
COMMA : ,
INT_LIT : 3
COMMA : ,
INT_LIT : 3
COMMA : ,
INT_LIT : 4
COMMA : ,
INT_LIT : 4
COMMA : ,
INT_LIT : 4
COMMA : ,
INT_LIT : 4
COMMA : ,
INT_LIT : 4
COMMA : ,
INT_LIT : 5
COMMA : ,
INT_LIT : 5
COMMA : ,
INT_LIT : 5
COMMA : ,
INT_LIT : 5
COMMA : ,
INT_LIT : 5
RC : }
SEMICOLON : ;
INT : int
ID : m
COMMA : ,
ID : n
COMMA : ,
ID : i
COMMA : ,
ID : j
SEMICOLON : ;
FLOAT : float
ID : f
SEMICOLON : ;
ID : f
ASSIGN : =
FLOAT_LIT : 1.1
SEMICOLON : ;
ID : m
ASSIGN : =
INT_LIT : 2
SEMICOLON : ;
ID : n
ASSIGN : =
INT_LIT : 3
SEMICOLON : ;
ID : j
ASSIGN : =
INT_LIT : 0
SEMICOLON : ;
WHILE : while
LP : (
ID : j
LT : <
INT_LIT : 5
RP : )
LC : {
ID : i
ASSIGN : =
ID : a
LB : [
ID : m
MINUS : -
INT_LIT : 1
RB : ]
LB : [
ID : j
RB : ]
SEMICOLON : ;
ID : a
LB : [
ID : m
MINUS : -
INT_LIT : 1
RB : ]
LB : [
ID : j
RB : ]
ASSIGN : =
ID : a
LB : [
ID : n
MINUS : -
INT_LIT : 1
RB : ]
LB : [
ID : j
RB : ]
SEMICOLON : ;
ID : a
LB : [
ID : n
MINUS : -
INT_LIT : 1
RB : ]
LB : [
ID : j
RB : ]
ASSIGN : =
ID : i
SEMICOLON : ;
ID : j
ASSIGN : =
ID : j
ADD : +
INT_LIT : 1
SEMICOLON : ;
RC : }
RETURN : return
ID : a
LB : [
INT_LIT : 2
RB : ]
LB : [
INT_LIT : 0
RB : ]
SEMICOLON : ;
RC : }
